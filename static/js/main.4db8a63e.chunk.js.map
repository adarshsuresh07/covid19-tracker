{"version":3,"sources":["Components/Header.js","Components/IndiaCards.js","Components/India.js","Components/Kerala.js","Components/WorldCards.js","Components/World.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","to","className","Toggle","aria-controls","Collapse","id","Nav","Link","href","eventKey","React","Component","IndiaCards","state","indiacards_data","axios","get","then","response","setState","data","Container","fluid","Row","Col","sm","CardDeck","Card","as","Body","Title","this","cases","Text","todayCases","active","deaths","todayDeaths","recovered","India","props","distrct_data","state_names","Object","keys","map","item","index","all_districts","districtData","total_confirmed","total_newcases","total_deaths","total_newdeaths","total_recovered","total_active","district_list","x","confirmed","delta","deceased","ob","push","district_rows","district_name","Accordion","Button","style","marginRight","Badge","Table","responsive","bordered","hover","size","Kerala","WorldCards","worldcards_data","reponse","World","world_data","table_data","key","country","critical","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4db8a63e.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <Navbar collapseOnSelect expand=\"xl\" bg=\"dark\" variant=\"dark\">\n                <Link to=\"/covid19-tracker/\" className=\"navbar-brand\">Covid-19 Tracker</Link>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"nav-link\" to=\"/covid19-tracker/\">India</Link>\n                        <Link className=\"nav-link\" to=\"/covid19-tracker/world/\">World</Link>\n                        <Link className=\"nav-link\" to=\"/covid19-tracker/kerala/\">Kerala</Link>\n                    </Nav>\n                    <Nav>\n                        <Nav.Link href=\"#deets\">More deets</Nav.Link>\n                        <Nav.Link eventKey={2} href=\"#memes\">\n                            Dank memes\n                            </Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport axios from 'axios';\nimport { Container, Row, Col } from 'react-bootstrap'; \nimport { CardDeck, Card } from 'react-bootstrap';\n\nclass IndiaCards extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            indiacards_data : []\n        }\n    }\n\n    componentWillMount() {\n        axios.get(\"https://disease.sh/v2/countries/india\").then(response => {\n            this.setState({\n                indiacards_data: response.data\n            })\n        });\n\n    }\n\n    render() {\n        return (\n            <Container fluid className=\"text-center\">\n                <Row>\n                    <Col sm=\"2\"> <h2>India</h2> </Col>\n                </Row>\n                <Row>\n                    <Col sm>\n                        <CardDeck>\n                            <Card bg=\"primary\">\n                                <Card.Header as=\"h4\">Total Cases</Card.Header>\n                                <Card.Body>\n                                    <Card.Title>{this.state.indiacards_data.cases}</Card.Title>\n                                    <Card.Text>\n                                        Today : {this.state.indiacards_data.todayCases}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n\n                            <Card bg=\"warning\">\n                                <Card.Header as=\"h4\">Active Cases</Card.Header>\n                                <Card.Body>\n                                    <Card.Title>{this.state.indiacards_data.active}</Card.Title>\n                                    <Card.Text>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n\n                            <Card bg=\"danger\">\n                                <Card.Header as=\"h4\">Total Death</Card.Header>\n                                <Card.Body>\n                                    <Card.Title>{this.state.indiacards_data.deaths}</Card.Title>\n                                    <Card.Text>\n                                        Today : {this.state.indiacards_data.todayDeaths}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n\n                            <Card bg=\"success\">\n                                <Card.Header as=\"h4\">Total Recovered</Card.Header>\n                                <Card.Body>\n                                    <Card.Title>{this.state.indiacards_data.recovered}</Card.Title>\n                                    <Card.Text>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardDeck>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default IndiaCards;","import React from 'react';\nimport axios from 'axios';\n\nimport IndiaCards from './IndiaCards';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Accordion, Card } from 'react-bootstrap';\nimport { Table, Badge, Button } from 'react-bootstrap';\n\nclass India extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n            distrct_data: {}\n        }\n    }\n\n    componentWillMount() {\n        axios.get(\"https://api.covid19india.org/state_district_wise.json\").then(response => {\n            this.setState(\n                { data: response.data }\n            );\n        });\n    }\n\n    render() {\n        let all_state_names = Object.keys(this.state.data);\n\n        let state_names = all_state_names.map((item, index) => {\n\n            let all_districts = this.state.data[item].districtData;\n\n            let total_confirmed = 0; let total_newcases = 0;\n            let total_deaths = 0; let total_newdeaths = 0;\n            let total_recovered = 0; let total_active = 0;\n\n            let district_list = [];\n            for (let x in all_districts) {\n                total_confirmed += all_districts[x].confirmed;\n                total_newcases += all_districts[x].delta.confirmed;\n                total_deaths += all_districts[x].deceased;\n                total_newdeaths += all_districts[x].delta.deceased;\n                total_recovered += all_districts[x].recovered;\n                total_active += all_districts[x].active;\n\n                let ob = all_districts[x];\n                ob[\"district_name\"] = x;\n                district_list.push(ob);\n            }\n\n            let district_rows = district_list.map((item, index) => {\n                return (\n                    <tr>\n                        <td>{index + 1}</td>\n                        <td>{item.district_name}</td>\n                        <td>{item.confirmed}</td>\n                        <td>{item.delta.confirmed}</td>\n                        <td>{item.deceased}</td>\n                        <td>{item.delta.deceased}</td>\n                        <td>{item.recovered}</td>\n                        <td>{item.active}</td>\n                    </tr>\n                );\n            });\n\n            return (\n                <Card>\n                    <Accordion.Toggle as={Card.Header} variant=\"primary\" eventKey={index} className=\"font-weight-bold\">\n                        <Button variant=\"dark\" style={ {marginRight:\"10px\"}}>{item}</Button>\n                        <Badge variant=\"secondary\">Confirmed-{total_confirmed}</Badge>{'  '}\n                        <Badge variant=\"primary\">New Cases-{total_newcases}</Badge>{' '}\n                        <Badge variant=\"secondary\">Deaths-{total_deaths}</Badge>{'  '}\n                        <Badge variant=\"danger\">New Deaths-{total_newdeaths}</Badge>{'  '}\n                        <Badge variant=\"success\">Recoverd-{total_recovered}</Badge>{'  '}\n                        <Badge variant=\"warning\">Active-{total_active}</Badge>{'  '}                        \n                    </Accordion.Toggle>\n\n                    <Accordion.Collapse eventKey={index}>\n                        <Card.Body>\n                            <Table responsive bordered hover size=\"sm\">\n                                <thead className=\"thead-dark\">\n                                    <tr>\n                                        <td>#</td>\n                                        <td>District</td>\n                                        <td className=\"bg-primary\">Confirmed</td>\n                                        <td className=\"bg-warning\">New Cases</td>\n                                        <td className=\"bg-danger\">Deaths</td>\n                                        <td>New Deaths</td>\n                                        <td className=\"bg-success\">Recoverd</td>\n                                        <td>Active</td>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {district_rows}\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            );\n        })\n\n\n\n        return (\n            <Container fluid>\n                <Row>\n                    <Col>\n                        <IndiaCards />\n                    </Col>\n                </Row>\n\n                <Row>\n                    &nbsp;\n                </Row>\n\n                <Row>\n                    <Col>\n                        <Accordion>\n                            {state_names}\n                        </Accordion>\n                    </Col>\n\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default India;","import React from 'react';\n\nclass Kerala extends React.Component{\n    render(){\n        return(\n            <div>\n                Keralite Component\n            </div>\n        );\n    }\n}\n\nexport default Kerala;","import React from 'react';\nimport axios from 'axios';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { CardDeck, Card } from 'react-bootstrap';\n\nclass WorldCards extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            worldcards_data: {}\n        }\n    }\n\n    componentWillMount() {\n        axios.get(\"https://disease.sh/v2/all\").then(reponse => {\n            this.setState({\n                worldcards_data: reponse.data\n            })\n        });\n\n    }\n\n    render() {\n        return (\n            <Container fluid className=\"text-center\">\n                <Row>\n                    <Col sm=\"2\"> <h2>World</h2> </Col>\n                </Row>\n                \n                <Row>\n                    <Col sm>\n                        <CardDeck>\n                            <Card bg=\"primary\">\n                                <Card.Header as=\"h4\">Total Cases</Card.Header>\n                                <Card.Body>\n                                    <Card.Title>{this.state.worldcards_data.cases}</Card.Title>\n                                    <Card.Text>\n                                        Today : {this.state.worldcards_data.todayCases}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n\n                            <Card bg=\"warning\">\n                                <Card.Header as=\"h4\">Active Cases</Card.Header>\n                                <Card.Body>\n                                    <Card.Title>{this.state.worldcards_data.active}</Card.Title>\n                                    <Card.Text>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n\n                            <Card bg=\"danger\">\n                                <Card.Header as=\"h4\">Total Death</Card.Header>\n                                <Card.Body>\n                                    <Card.Title>{this.state.worldcards_data.deaths}</Card.Title>\n                                    <Card.Text>\n                                        Today : {this.state.worldcards_data.todayDeaths}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n\n                            <Card bg=\"success\">\n                                <Card.Header as=\"h4\">Total Recovered</Card.Header>\n                                <Card.Body>\n                                    <Card.Title>{this.state.worldcards_data.recovered}</Card.Title>\n                                    <Card.Text>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardDeck>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default WorldCards;","import React from 'react';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport WorldCards from './WorldCards';\n\nclass World extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            world_data: []\n        }\n    }\n\n    componentWillMount() {\n        axios.get(\"https://disease.sh/v2/countries\").then(response => {\n            this.setState({\n                world_data: response.data\n            });\n        });\n    }\n\n    render() {\n\n        let table_data = this.state.world_data.map((item, index) => {\n            return (\n                <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td className=\"table-active\">{item.country}</td>\n                    <td className=\"table-primary\">{item.cases}</td>\n                    <td className=\"table-warning\">{item.todayCases}</td>\n                    <td className=\"table-danger\">{item.deaths}</td>\n                    <td>{item.todayDeaths}</td>\n                    <td className=\"table-success\">{item.recovered}</td>\n                    <td>{item.active}</td>\n                    <td>{item.critical}</td>\n                </tr>\n            );\n        })\n\n          \n        return (\n            <div>\n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <WorldCards />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        &nbsp;\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Table responsive bordered hover size=\"sm\">\n                                <thead className=\"thead-dark\">\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Country / Other</th>\n                                        <th className=\"bg-primary\">Total Cases</th>\n                                        <th className=\"bg-warning\">New Cases</th>\n                                        <th className=\"bg-danger\">Total Deaths</th>\n                                        <th>New Deaths</th>\n                                        <th className=\"bg-success\">Recovered</th>\n                                        <th>Active Cases</th>\n                                        <th>Serious / Critical</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {table_data}\n                                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n\n                </Container>\n            </div>\n\n        );\n    }\n}\n\nexport default World;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Header from './Components/Header';\nimport India from './Components/India';\nimport Kerala from './Components/Kerala';\nimport World from './Components/World';\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/covid19-tracker/\">\n          <Header />\n          <India />\n        </Route>\n\n        <Route path=\"/covid19-tracker/kerala/\">\n          <Header />\n          <Kerala />\n        </Route>\n\n        <Route path=\"/covid19-tracker/world/\">\n          <Header />\n          <World />\n        </Route>\n      </Switch>\n\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}